library(usethis)
use_mit_license()
library(roxygen2)
use_mit_license()
use_mit_license("Jiyoung Kang")
library(dplyr)
library(magrittr)
a <- read.csv("data_20200630")
a <- read.csv("data_20200630.csv")
a
library(magrittr)
library(readr)
install.packages(readr)
install.packages("readr")
a <- read_csv("data_20200630.csv")
library(usethis)
usethis::use_mit_license("Jiyoung Kang")
usethis::use_readme_md()
covid19_support <- read.csv("중소벤처기업진흥공단_코로나19 피해기업 지원현황_20200630.csv")
usethis::use_data(covid19_support)
usethis::use_data(covid19_support)
load("data/covid19_support.rda")
View(covid19_support)
library(dplyr)
covid19_support <- read.csv("중소벤처기업진흥공단_코로나19 피해기업 지원현황_20200630.csv")
old = c("일련번호","지역","업력","대출년도","대출월","대출금액.백만원.","업종")
new = c("no","region","startup.date","year","month","loan.krw1mil","industry")
covidSupp %>% rename_at(vars(old), ~ new)
covidSupp <- read.csv("중소벤처기업진흥공단_코로나19 피해기업 지원현황_20200630.csv")
old = c("일련번호","지역","업력","대출년도","대출월","대출금액.백만원.","업종")
new = c("no","region","startup.date","year","month","loan.krw1mil","industry")
covidSupp %>% rename_at(vars(old), ~ new)
covidSupp <- read.csv("중소벤처기업진흥공단_코로나19 피해기업 지원현황_20200630.csv")
old = c("일련번호","지역","업력","대출년도","대출월","대출금액.백만원.","업종")
new = c("no","region","startup.year","year","month","loan.krw1mil","industry")
covidSupp %>% rename_at(vars(old), ~ new)
view(covidSupp)
covidSupp
head(covidSupp)
usethis::use_data(covidSupp)
load("data/covidSupp.rda")
View(covidSupp)
covidSupp2 <- covidSupp %>% rename_at(vars(old), ~ new)
covidSupp2
head(covidSupp2)
covidSupp2$region
unique(covidSupp2$region)
c("강원" "경기" "경남" "경북" "광주" "대구" "대전" "부산" "서울" "울산" "인천" "전남" "전북"
"제주" "충남" "충북" "세종")
c("강원", "경기", "경남", "경북", "광주", "대구", "대전", "부산", "서울", "울산", "인천", "전남", "전북",
"제주", "충남", "충북", "세종")
old <- c("일련번호","지역","업력","대출년도","대출월","대출금액.백만원.","업종")
new <- c("no","region","startup.year","year","month","loan.krw1mil","industry")
covidSupp2 <- covidSupp %>% rename_at(vars(old), ~ new)
head(covidSupp2)
unique(covidSupp2$region)
old <- c("강원", "경기", "경남", "경북", "광주", "대구", "대전", "부산", "서울", "울산", "인천", "전남", "전북",
"제주", "충남", "충북", "세종")
unique(covidSupp2$startup.year)
covidSupp <- read.csv("중소벤처기업진흥공단_코로나19 피해기업 지원현황_20200630.csv", stringAsFactors = T)[, -1]
covidSupp <- read.csv("중소벤처기업진흥공단_코로나19 피해기업 지원현황_20200630.csv", stringsAsFactors= T)[, -1]
covidSupp <- read.csv("중소벤처기업진흥공단_코로나19 피해기업 지원현황_20200630.csv", stringsAsFactors = T)[, -1]
old <- c("지역","업력","대출년도","대출월","대출금액.백만원.","업종")
new <- c("region","startup.year","year","month","loan.krw1mil","industry")
covidSupp2 <- covidSupp %>% rename_at(vars(old), ~ new)
head(covidSupp2)
unique(covidSupp2$region)
factor$region
factor(covidSupp2$region()
)
factor(covidSupp2$region)
factor(covidSupp2$region, labels =  c("Gangwon", "Gyeonggi", "Gyeongnam", "Gyeongbuk", "Gwangju", "Daegu", "Daejeon", "Busan", "Seoul", "Ulsan", "Incheon", "Jeonnam", "Jeonbuk ",
"Jeju", "Chungnam", "Chungbuk", "Sejong"))
factor(covidSupp2$startup.year)
unique(factor(covidSupp2$startup.year))
covidSupp2$startup.year <- factor(c, labels =  c(10, 15, 1, 20, 99, 3, 5, 7))
covidSupp2$startup.year <- factor(, labels =  c(10, 15, 1, 20, 99, 3, 5, 7))
library(dplyr)
covidSupp_org <- read.csv("중소벤처기업진흥공단_코로나19 피해기업 지원현황_20200630.csv", stringsAsFactors = T)[, -1]
old <- c("지역","업력","대출년도","대출월","대출금액.백만원.","업종")
new <- c("region","startup.year","year","month","loan.krw1mil","industry")
covidSupp <- covidSupp_org %>% rename_at(vars(old), ~ new)
covidSupp$region <- factor(covidSupp$region, labels =  c("Gangwon", "Gyeonggi", "Gyeongnam", "Gyeongbuk", "Gwangju", "Daegu", "Daejeon", "Busan", "Seoul", "Ulsan", "Incheon", "Jeonnam", "Jeonbuk ","Jeju", "Chungnam", "Chungbuk", "Sejong"))
#10년미만 15년미만 1년미만 20년미만 20년이상 3년미만 5년미만 7년미만
covidSupp$startup.year <- factor(covidSupp$region, labels =  c(10, 15, 1, 20, 99, 3, 5, 7))
#10년미만 15년미만 1년미만 20년미만 20년이상 3년미만 5년미만 7년미만
covidSupp$startup.year <- factor(covidSupp$startup.year, labels =  c(10, 15, 1, 20, 99, 3, 5, 7))
covidSupp_org$지역
unique(covidSupp_org$지역)
library(dplyr)
covidSupp_org <- read.csv("중소벤처기업진흥공단_코로나19 피해기업 지원현황_20200630.csv", stringsAsFactors = T)[, -1]
old <- c("지역","업력","대출년도","대출월","대출금액.백만원.","업종")
new <- c("region","startup.year","year","month","loan.krw1mil","industry")
covidSupp <- covidSupp_org %>% rename_at(vars(old), ~ new)
#강원     경기       경남         경북         광주      대구      대전        부산     서울    세종      울산      인천       전남      전북        제주     충남      충북
#c("Gangwon", "Gyeonggi", "Gyeongnam", "Gyeongbuk", "Gwangju", "Daegu", "Daejeon", "Busan", "Seoul", "Sejong", "Ulsan", "Incheon", "Jeonnam", "Jeonbuk ","Jeju", "Chungnam", "Chungbuk"))
covidSupp$region <- factor(covidSupp$region, labels =
c("Gangwon", "Gyeonggi", "Gyeongnam", "Gyeongbuk", "Gwangju", "Daegu", "Daejeon", "Busan", "Seoul", "Sejong", "Ulsan", "Incheon", "Jeonnam", "Jeonbuk ","Jeju", "Chungnam", "Chungbuk"))
#10년미만 15년미만 1년미만 20년미만 20년이상 3년미만 5년미만 7년미만
covidSupp$startup.year <- factor(covidSupp$startup.year, labels =  c(10, 15, 1, 20, 99, 3, 5, 7))
head(covidSupp)
covidSupp$industry <- factor(covidSupp$industry, labels =
c("Electronic","Painter","Electrical","Other","Fiber","Distribution","Metallic","Machine","Information","Food"))
covidSupp$industry
unique(covidSupp$industry)
# Levels: 금속 기계 기타 섬유 식료 유통 잡화 전기 전자 정보 화공
covidSupp$industry <- factor(covidSupp$industry, labels =
c("Metal", "Machinery", "Other", "Textiles", "Food", "Distribution", "Goods", "Electricity", "Electronic", "Information", "ChemicalEngineering"))
usethis::use_data(covidSupp_org)
load("data/covidSupp.rda")
View(covidSupp)
load("data/covidSupp_org.rda")
View(covidSupp_org)
covidSupp_org <- read.csv("중소벤처기업진흥공단_코로나19 피해기업 지원현황_20200630.csv", stringsAsFactors = T)[, -1]
# change column name
old <- c("지역","업력","대출년도","대출월","대출금액.백만원.","업종")
new <- c("region","startup.year","year","month","loan.krw1mil","industry")
covidSupp <- covidSupp_org %>% rename_at(vars(old), ~ new)
# change region name
#강원     경기       경남         경북         광주      대구      대전        부산     서울    세종      울산      인천       전남      전북        제주     충남      충북
#c("Gangwon", "Gyeonggi", "Gyeongnam", "Gyeongbuk", "Gwangju", "Daegu", "Daejeon", "Busan", "Seoul", "Sejong", "Ulsan", "Incheon", "Jeonnam", "Jeonbuk ","Jeju", "Chungnam", "Chungbuk"))
covidSupp$region <- factor(covidSupp$region, labels =
c("Gangwon", "Gyeonggi", "Gyeongnam", "Gyeongbuk", "Gwangju", "Daegu", "Daejeon", "Busan", "Seoul", "Sejong", "Ulsan", "Incheon", "Jeonnam", "Jeonbuk ","Jeju", "Chungnam", "Chungbuk"))
# change startup year
#10년미만 15년미만 1년미만 20년미만 20년이상 3년미만 5년미만 7년미만
covidSupp$startup.year <- factor(covidSupp$startup.year, labels =  c(10, 15, 1, 20, 99, 3, 5, 7))
# Levels: 금속 기계 기타 섬유 식료 유통 잡화 전기 전자 정보 화공
covidSupp$industry <- factor(covidSupp$industry, labels =
c("Metal", "Machinery", "Other", "Textiles", "Food", "Distribution", "Goods", "Electricity", "Electronic", "Information", "ChemicalEngineering"))
usethis::use_data(covidSupp)
load("data/covidSupp.rda")
View(covidSupp)
covidSupp_org <- read.csv("중소벤처기업진흥공단_코로나19 피해기업 지원현황_20200630.csv", stringsAsFactors = T)[, -1]
# change column name
old <- c("지역","업력","대출년도","대출월","대출금액.백만원.","업종")
new <- c("region","startup.year","year","month","loan.krw1mil","industry")
covidSupp <- covidSupp_org %>% rename_at(vars(old), ~ new)
# change region name
#강원     경기       경남         경북         광주      대구      대전        부산     서울    세종      울산      인천       전남      전북        제주     충남      충북
#c("Gangwon", "Gyeonggi", "Gyeongnam", "Gyeongbuk", "Gwangju", "Daegu", "Daejeon", "Busan", "Seoul", "Sejong", "Ulsan", "Incheon", "Jeonnam", "Jeonbuk ","Jeju", "Chungnam", "Chungbuk"))
covidSupp$region <- factor(covidSupp$region, labels =
c("Gangwon", "Gyeonggi", "Gyeongnam", "Gyeongbuk", "Gwangju", "Daegu", "Daejeon", "Busan", "Seoul", "Sejong", "Ulsan", "Incheon", "Jeonnam", "Jeonbuk ","Jeju", "Chungnam", "Chungbuk"))
# change startup year
#10년미만 15년미만 1년미만 20년미만 20년이상 3년미만 5년미만 7년미만
covidSupp$startup.year <- factor(covidSupp$startup.year, labels =  c(10, 15, 1, 20, 99, 3, 5, 7))
# Levels: 금속 기계 기타 섬유 식료 유통 잡화 전기 전자 정보 화공
covidSupp$industry <- factor(covidSupp$industry, labels =
c("Metal", "Machinery", "Other", "Textiles", "Food", "Distribution", "Goods", "Electricity", "Electronic", "Information", "ChemicalEngineering"))
usethis::use_data(covidSupp_org)
install.packages("data.table")
library(magrittr)
usethis::use_data(covidSupp)
load("data/covidSupp.rda")
View(covidSupp)
devtools::install_github("jykang00/overCovidKor")
devtools::install_github("jykang00/overcomeCovidKor")
library(overcomeCovidKor)
data("covidSupp")
covidSupp
library(overcomeCovidKor)
covidSupp
head(covidSupp)
help("covidSupp")
# 아래 라인을 실행하면 '.Renviron' 파일이 새로운 탭으로 열립니다
usethis::edit_r_environ()
# 아래 라인을 실행하면 '.Renviron' 파일이 새로운 탭으로 열립니다
usethis::edit_r_environ()
# RStudio를 재부팅하고 아래 라인을 실행하면 콘솔 창에 인증키가 출력됩니다.
Sys.getenv('DATAGOKR_TOKEN')
# 필요한 패키지를 불러옵니다.
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
# 요청 URL을 저장합니다.
URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson'
# 일반 인증키를 저장합니다.
myKey <- Sys.getenv('DATAGOKR_TOKEN')
myKey
# 아래 라인을 실행하면 '.Renviron' 파일이 새로운 탭으로 열립니다
usethis::edit_r_environ()
# RStudio를 재부팅하고 아래 라인을 실행하면 콘솔 창에 인증키가 출력됩니다.
Sys.getenv('DATAGOKR_TOKEN')
# RStudio를 재부팅하고 아래 라인을 실행하면 콘솔 창에 인증키가 출력됩니다.
Sys.getenv('DATAGOKR_TOKEN')
# 필요한 패키지를 불러옵니다.
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
# 요청 URL을 저장합니다.
URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19'
# 일반 인증키를 저장합니다.
myKey <- Sys.getenv('DATAGOKR_TOKEN')
res <- GET(url = URL)
status_code(x = res)
# RStudio를 재부팅하고 아래 라인을 실행하면 콘솔 창에 인증키가 출력됩니다.
Sys.getenv('DATAGOKR_TOKEN')
URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson'
res <- GET(url = URL,
query = list(serviceKey = I(x = myKey),
pageNo = 1,
numOfRows = 10,
startCreateDt = '20200310',
endCreateDt = '20200315'))
res
view(res)
URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson'
res <- GET(url = URL,
query = list(serviceKey = I(x = myKey),
pageNo = 1,
numOfRows = 10,
startCreateDt = '20200310',
endCreateDt = '20200315'))
res
str(object = json)
# 아래 라인을 실행하면 '.Renviron' 파일이 새로운 탭으로 열립니다
usethis::edit_r_environ()
# RStudio를 재부팅하고 아래 라인을 실행하면 콘솔 창에 인증키가 출력됩니다.
Sys.getenv('DATAGOKR_TOKEN')
# 필요한 패키지를 불러옵니다.
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
# 요청 URL을 저장합니다.
#URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19'
#URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=인증키(URL Encode)&pageNo=1&numOfRows=10&startCreateDt=20200310&endCreateDt=20200315'
URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson'
# 일반 인증키를 저장합니다.
myKey <- Sys.getenv('DATAGOKR_TOKEN')
myKey
# 이 부분 query를 어떻게 넣어야 할지 잘 몰라 일단 뺐습니다.
#res <- GET(url = URL)
#res <- GET(url = URL, serviceKey = myKey %>% I())
res <- GET(url = URL,
query = list(serviceKey = I(x = myKey),
pageNo = 1,
numOfRows = 10,
startCreateDt = '20200310',
endCreateDt = '20200315'))
status_code(x = res)
# 응답 데이터에서 JSON 데이터를 추출합니다.
res %>%
content(as = 'text', encoding = 'UTF-8') %>%
fromJSON() -> json
# json 객체의 구조를 파악합니다.
str(object = json)
# 아래 라인을 실행하면 '.Renviron' 파일이 새로운 탭으로 열립니다
usethis::edit_r_environ()
t
# 필요한 패키지를 불러옵니다.
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
# 요청 URL을 저장합니다.
#URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19'
#URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=인증키(URL Encode)&pageNo=1&numOfRows=10&startCreateDt=20200310&endCreateDt=20200315'
URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson'
# 일반 인증키를 저장합니다.
myKey <- Sys.getenv('DATAGOKR_TOKEN')
myKey
# 이 부분 query를 어떻게 넣어야 할지 잘 몰라 일단 뺐습니다.
#res <- GET(url = URL)
#res <- GET(url = URL, serviceKey = myKey %>% I())
res <- GET(url = URL,
query = list(serviceKey = I(x = myKey),
pageNo = 1,
numOfRows = 10,
startCreateDt = '20200310',
endCreateDt = '20200315'))
status_code(x = res)
# 응답 데이터에서 JSON 데이터를 추출합니다.
res %>%
content(as = 'text', encoding = 'UTF-8') %>%
fromJSON() -> json
# json 객체의 구조를 파악합니다.
str(object = json)
# RStudio를 재부팅하고 아래 라인을 실행하면 콘솔 창에 인증키가 출력됩니다.
Sys.getenv('DATAGOKR_TOKEN')
# 필요한 패키지를 불러옵니다.
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
# 요청 URL을 저장합니다.
#URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19'
#URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=인증키(URL Encode)&pageNo=1&numOfRows=10&startCreateDt=20200310&endCreateDt=20200315'
URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson'
# 일반 인증키를 저장합니다.
myKey <- Sys.getenv('DATAGOKR_TOKEN')
myKey
# 이 부분 query를 어떻게 넣어야 할지 잘 몰라 일단 뺐습니다.
#res <- GET(url = URL)
#res <- GET(url = URL, serviceKey = myKey %>% I())
res <- GET(url = URL,
query = list(serviceKey = I(x = myKey),
pageNo = 1,
numOfRows = 10,
startCreateDt = '20200310',
endCreateDt = '20200315'))
status_code(x = res)
# 응답 데이터에서 JSON 데이터를 추출합니다.
res %>%
content(as = 'text', encoding = 'UTF-8') %>%
fromJSON() -> json
# json 객체의 구조를 파악합니다.
str(object = json)
# 아래 라인을 실행하면 '.Renviron' 파일이 새로운 탭으로 열립니다
usethis::edit_r_environ()
# RStudio를 재부팅하고 아래 라인을 실행하면 콘솔 창에 인증키가 출력됩니다.
Sys.getenv('DATAGOKR_TOKEN')
# 필요한 패키지를 불러옵니다.
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
# 요청 URL을 저장합니다.
#URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19'
#URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?serviceKey=인증키(URL Encode)&pageNo=1&numOfRows=10&startCreateDt=20200310&endCreateDt=20200315'
URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson'
# 일반 인증키를 저장합니다.
myKey <- Sys.getenv('DATAGOKR_TOKEN')
myKey
# 이 부분 query를 어떻게 넣어야 할지 잘 몰라 일단 뺐습니다.
#res <- GET(url = URL)
#res <- GET(url = URL, serviceKey = myKey %>% I())
res <- GET(url = URL,
query = list(serviceKey = I(x = myKey),
pageNo = 1,
numOfRows = 10,
startCreateDt = '20200310',
endCreateDt = '20200315'))
status_code(x = res)
# 응답 데이터에서 JSON 데이터를 추출합니다.
res %>%
content(as = 'text', encoding = 'UTF-8') %>%
fromJSON() -> json
# json 객체의 구조를 파악합니다.
str(object = json)
URL3<-'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19GenAgeCaseInfJson'
res3 <- GET(url = URL3,
query = list(serviceKey = I(x = myKey),
pageNo = 1,
numOfRows = 10,
startCreateDt = '20200101',
endCreateDt = '20201128'))
res3 %>%
content(as = 'text', encoding = 'UTF-8') %>%
fromJSON() -> json3
URL3<-'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19GenAgeCaseInfJson'
res3 <- GET(url = URL3,
query = list(serviceKey = I(x = myKey),
pageNo = 1,
numOfRows = 10,
startCreateDt = '20200101',
endCreateDt = '20201128'))
URL2<-'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19SidoInfStateJson'
res2 <- GET(url = URL2,
query = list(serviceKey = I(x = myKey),
pageNo = 1,
numOfRows = 10,
startCreateDt = '20200101',
endCreateDt = '20201128'))
# 필요한 패키지를 불러옵니다.
library(tidyverse)
library(httr)
library(rvest)
library(jsonlite)
# 일반 인증키를 저장합니다.
myKey <- Sys.getenv('DATAGOKR_TOKEN')
myKey
res <- GET(url = URL,
query = list(serviceKey = I(x = myKey),
pageNo = 1,
numOfRows = 10,
startCreateDt = '20200101',
endCreateDt = '20201128'))
# 요청 URL을 저장합니다.
URL <- 'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson'
# 일반 인증키를 저장합니다.
myKey <- Sys.getenv('DATAGOKR_TOKEN')
myKey
res <- GET(url = URL,
query = list(serviceKey = I(x = myKey),
pageNo = 1,
numOfRows = 10,
startCreateDt = '20200101',
endCreateDt = '20201128'))
status_code(x = res)
URL3<-'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19GenAgeCaseInfJson'
res3 <- GET(url = URL3,
query = list(serviceKey = I(x = myKey),
pageNo = 1,
numOfRows = 10,
startCreateDt = '20200101',
endCreateDt = '20201128'))
res3 %>%
content(as = 'text', encoding = 'UTF-8') %>%
fromJSON() -> json3
str(object = json3)
covid19GenAgeCaseInf <- json3$response$body$items$item
print(x = covid19GenAgeCaseInf)
View(covid19GenAgeCaseInf)
write.csv(covid19GenAgeCaseInf, file="data/covid19GenAgeCaseInf.csv")
URL3<-'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19GenAgeCaseInfJson'
res3 <- GET(url = URL3,
query = list(serviceKey = I(x = myKey),
pageNo = 1,
numOfRows = 10,
startCreateDt = '20200101',
endCreateDt = '20201128'))
res3 %>%
content(as = 'text', encoding = 'UTF-8') %>%
fromJSON() -> json3
str(object = json3)
URL3<-'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19GenAgeCaseInfJson'
res3 <- GET(url = URL3,
query = list(serviceKey = I(x = myKey),
pageNo = 1,
numOfRows = 10,
startCreateDt = '20200101',
endCreateDt = '20201128'))
res3 %>%
content(as = 'text', encoding = 'UTF-8') %>%
fromJSON() -> json3
str(object = json3)
covid19GenAgeCaseInf <- json3$response$body$items$item
print(x = covid19GenAgeCaseInf)
View(covid19GenAgeCaseInf)
write.csv(covid19GenAgeCaseInf, file="data/covid19GenAgeCaseInf.csv")
